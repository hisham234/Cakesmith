{"ast":null,"code":"import _objectSpread from\"C:/Users/Lucifer/The Cakesmith/fyp-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/Lucifer/The Cakesmith/fyp-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useSelector}from'react-redux';import{Redirect,Route}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";export default function AdminRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){return userInfo&&userInfo.isAdmin?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):/*#__PURE__*/_jsx(Redirect,{to:\"/signin\"});}}));}","map":{"version":3,"sources":["C:/Users/Lucifer/The Cakesmith/fyp-frontend/src/components/AdminRoute.js"],"names":["React","useSelector","Redirect","Route","AdminRoute","Component","component","rest","userSignin","state","userInfo","props","isAdmin"],"mappings":"+QAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,C,2CAEA,cAAe,SAASC,CAAAA,UAAT,MAAuD,IAAtBC,CAAAA,SAAsB,MAAjCC,SAAiC,CAARC,IAAQ,8CACpE,GAAMC,CAAAA,UAAU,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACD,UAAjB,EAAD,CAA9B,CACA,GAAQE,CAAAA,QAAR,CAAqBF,UAArB,CAAQE,QAAR,CACA,mBACE,KAAC,KAAD,gCACMH,IADN,MAEE,MAAM,CAAE,gBAACI,KAAD,QACND,CAAAA,QAAQ,EAAIA,QAAQ,CAACE,OAArB,cACE,KAAC,SAAD,kBAAeD,KAAf,EADF,cAGE,KAAC,QAAD,EAAU,EAAE,CAAC,SAAb,EAJI,EAFV,GADF,CAYD","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default function AdminRoute({ component: Component, ...rest }) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userInfo && userInfo.isAdmin ? (\r\n          <Component {...props}></Component>\r\n        ) : (\r\n          <Redirect to=\"/signin\" />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
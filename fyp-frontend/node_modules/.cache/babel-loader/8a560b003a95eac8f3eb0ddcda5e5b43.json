{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucifer\\\\The Cakesmith\\\\fyp-frontend\\\\src\\\\components\\\\SupportScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport Header from '../Pages/Header';\nimport Footer from '../Pages/Footer';\nimport './SupportScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\nexport default function SupportScreen() {\n  _s();\n\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      sk.on('message', data => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find(user => user._id === data._id);\n\n          if (existUser) {\n            allUsers = allUsers.map(user => user._id === existUser._id ? { ...user,\n              unread: true\n            } : user);\n            setUsers(allUsers);\n          }\n        }\n\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', updatedUser => {\n        const existUser = allUsers.find(user => user._id === updatedUser._id);\n\n        if (existUser) {\n          allUsers = allUsers.map(user => user._id === existUser._id ? updatedUser : user);\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', updatedUsers => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', user => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = user => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find(x => x._id === user._id);\n\n    if (existUser) {\n      allUsers = allUsers.map(x => x._id === existUser._id ? { ...x,\n        unread: false\n      } : x);\n      setUsers(allUsers);\n    }\n\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [...allMessages, {\n        body: messageBody,\n        name: userInfo.name\n      }];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id\n        });\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SupportMain\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row top full-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 support-users\",\n          children: [users.filter(x => x._id !== userInfo._id).length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n            children: \"No Online User Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: users.filter(x => x._id !== userInfo._id).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: user._id === selectedUser._id ? '  selected' : '  ',\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"block\",\n                type: \"button\",\n                onClick: () => selectUser(user),\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: user.unread ? 'unread' : user.online ? 'online' : 'offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3 support-messages\",\n          children: !selectedUser._id ? /*#__PURE__*/_jsxDEV(MessageBox, {\n            children: \"Select a user to start chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Chat with \", selectedUser.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              ref: uiMessagesRef,\n              children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"No message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: `${msg.name}: `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), \" \", msg.body]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitHandler,\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  value: messageBody,\n                  onChange: e => setMessageBody(e.target.value),\n                  type: \"text\",\n                  placeholder: \"type message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupportScreen, \"BHpZw9mClwtoU7ADQuL2UqU7b7I=\", false, function () {\n  return [useSelector];\n});\n\n_c = SupportScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupportScreen\");","map":{"version":3,"sources":["C:/Users/Lucifer/The Cakesmith/fyp-frontend/src/components/SupportScreen.js"],"names":["React","useEffect","useRef","useState","socketIOClient","useSelector","MessageBox","Header","Footer","allUsers","allMessages","allSelectedUser","ENDPOINT","window","location","host","indexOf","SupportScreen","selectedUser","setSelectedUser","socket","setSocket","uiMessagesRef","messageBody","setMessageBody","messages","setMessages","users","setUsers","userSignin","state","userInfo","current","scrollBy","top","clientHeight","left","behavior","sk","emit","_id","name","isAdmin","on","data","existUser","find","user","map","unread","updatedUser","updatedUsers","selectUser","x","submitHandler","e","preventDefault","trim","alert","body","setTimeout","filter","length","online","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Header from '../Pages/Header';\r\nimport Footer from '../Pages/Footer';\r\nimport './SupportScreen.css';\r\n\r\nlet allUsers = [];\r\nlet allMessages = [];\r\nlet allSelectedUser = {};\r\nconst ENDPOINT =\r\n  window.location.host.indexOf('localhost') >= 0\r\n    ? 'http://127.0.0.1:5000'\r\n    : window.location.host;\r\n\r\nexport default function SupportScreen() {\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [socket, setSocket] = useState(null);\r\n  const uiMessagesRef = useRef(null);\r\n  const [messageBody, setMessageBody] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  useEffect(() => {\r\n    if (uiMessagesRef.current) {\r\n      uiMessagesRef.current.scrollBy({\r\n        top: uiMessagesRef.current.clientHeight,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n\r\n    if (!socket) {\r\n      const sk = socketIOClient(ENDPOINT);\r\n      setSocket(sk);\r\n      sk.emit('onLogin', {\r\n        _id: userInfo._id,\r\n        name: userInfo.name,\r\n        isAdmin: userInfo.isAdmin,\r\n      });\r\n      sk.on('message', (data) => {\r\n        if (allSelectedUser._id === data._id) {\r\n          allMessages = [...allMessages, data];\r\n        } else {\r\n          const existUser = allUsers.find((user) => user._id === data._id);\r\n          if (existUser) {\r\n            allUsers = allUsers.map((user) =>\r\n              user._id === existUser._id ? { ...user, unread: true } : user\r\n            );\r\n            setUsers(allUsers);\r\n          }\r\n        }\r\n        setMessages(allMessages);\r\n      });\r\n      sk.on('updateUser', (updatedUser) => {\r\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\r\n        if (existUser) {\r\n          allUsers = allUsers.map((user) =>\r\n            user._id === existUser._id ? updatedUser : user\r\n          );\r\n          setUsers(allUsers);\r\n        } else {\r\n          allUsers = [...allUsers, updatedUser];\r\n          setUsers(allUsers);\r\n        }\r\n      });\r\n      sk.on('listUsers', (updatedUsers) => {\r\n        allUsers = updatedUsers;\r\n        setUsers(allUsers);\r\n      });\r\n      sk.on('selectUser', (user) => {\r\n        allMessages = user.messages;\r\n        setMessages(allMessages);\r\n      });\r\n    }\r\n  }, [messages, socket, users]);\r\n\r\n  const selectUser = (user) => {\r\n    allSelectedUser = user;\r\n    setSelectedUser(allSelectedUser);\r\n    const existUser = allUsers.find((x) => x._id === user._id);\r\n    if (existUser) {\r\n      allUsers = allUsers.map((x) =>\r\n        x._id === existUser._id ? { ...x, unread: false } : x\r\n      );\r\n      setUsers(allUsers);\r\n    }\r\n    socket.emit('onUserSelected', user);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!messageBody.trim()) {\r\n      alert('Error. Please type message.');\r\n    } else {\r\n      allMessages = [\r\n        ...allMessages,\r\n        { body: messageBody, name: userInfo.name },\r\n      ];\r\n      setMessages(allMessages);\r\n      setMessageBody('');\r\n      setTimeout(() => {\r\n        socket.emit('onMessage', {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n          isAdmin: userInfo.isAdmin,\r\n          _id: selectedUser._id,\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <div className=\"SupportMain\">\r\n    <div className=\"row top full-container\">\r\n      <div className=\"col-1 support-users\">\r\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\r\n          <MessageBox>No Online User Found</MessageBox>\r\n        )}\r\n        <ul>\r\n          {users\r\n            .filter((x) => x._id !== userInfo._id)\r\n            .map((user) => (\r\n              <li\r\n                key={user._id}\r\n                className={user._id === selectedUser._id ? '  selected' : '  '}\r\n              >\r\n                <button\r\n                  className=\"block\"\r\n                  type=\"button\"\r\n                  onClick={() => selectUser(user)}\r\n                >\r\n                  {user.name}\r\n                </button>\r\n                <span\r\n                  className={\r\n                    user.unread ? 'unread' : user.online ? 'online' : 'offline'\r\n                  }\r\n                />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-3 support-messages\">\r\n        {!selectedUser._id ? (\r\n          <MessageBox>Select a user to start chat</MessageBox>\r\n        ) : (\r\n          <div>\r\n            <div className=\"row\">\r\n              <strong>Chat with {selectedUser.name} </strong>\r\n            </div>\r\n            <ul ref={uiMessagesRef}>\r\n              {messages.length === 0 && <li>No message.</li>}\r\n              {messages.map((msg, index) => (\r\n                <li key={index}>\r\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div>\r\n              <form onSubmit={submitHandler} className=\"row\">\r\n                <input\r\n                  value={messageBody}\r\n                  onChange={(e) => setMessageBody(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"type message\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </div>\r\n    <Footer/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
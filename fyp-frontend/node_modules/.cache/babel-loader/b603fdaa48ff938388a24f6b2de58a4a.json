{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucifer\\\\The Cakesmith\\\\fyp-frontend\\\\src\\\\components\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport Footer from '../Pages/Footer';\nimport Header from '../Pages/Header';\nimport './ShippingAddressScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen(props) {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    props.history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginBody\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Shippingwrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ShippingForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Shipping Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fullName\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"fullName\",\n                pattern: \"[a-zA-Z]+\",\n                title: \"Name can't contain letters\",\n                maxLength: \"20\",\n                minLength: \"6\",\n                placeholder: \"Enter full name\",\n                value: fullName,\n                onChange: e => setFullName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \"Enter address\",\n                maxLength: \"100\",\n                minLength: \"15\",\n                value: address,\n                onChange: e => setAddress(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"city\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"city\",\n                pattern: \"[a-zA-Z]+\",\n                title: \"City can't contain letters\",\n                placeholder: \"Enter city\",\n                value: city,\n                onChange: e => setCity(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"postalCode\",\n                children: \"Postal Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"postalCode\",\n                placeholder: \"Enter postal code\",\n                value: postalCode,\n                onChange: e => setPostalCode(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"country\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"country\",\n                placeholder: \"Enter country\",\n                value: country,\n                onChange: e => setCountry(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"primary\",\n                type: \"submit\",\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"aKR3+eOT6Pr0Jsab41QkdGviOjA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/Lucifer/The Cakesmith/fyp-frontend/src/components/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","Footer","Header","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","history","push","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport Footer from '../Pages/Footer';\r\nimport Header from '../Pages/Header';\r\nimport './ShippingAddressScreen.css';\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  if (!userInfo) {\r\n    props.history.push('/signin');\r\n  }\r\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveShippingAddress({ fullName, address, city, postalCode, country })\r\n    );\r\n    props.history.push('/payment');\r\n  };\r\n  return (\r\n    <div>\r\n       <Header/>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <div className=\"LoginBody\">\r\n      <div className='Shippingwrap'>\r\n\r\n        <div className='ShippingForm'>\r\n          <form onSubmit={submitHandler}>\r\n            <h1>Shipping Address</h1>\r\n            <div>\r\n              <label htmlFor=\"fullName\">Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fullName\"\r\n                pattern=\"[a-zA-Z]+\" title=\"Name can't contain letters\" maxLength=\"20\" minLength=\"6\"\r\n                placeholder=\"Enter full name\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"address\"\r\n                placeholder=\"Enter address\"\r\n                maxLength=\"100\" minLength=\"15\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"city\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city\"\r\n                pattern=\"[a-zA-Z]+\"\r\n                title=\"City can't contain letters\"\r\n                placeholder=\"Enter city\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"postalCode\">Postal Code</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"postalCode\"\r\n                placeholder=\"Enter postal code\"\r\n                value={postalCode}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"country\">Country</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"country\"\r\n                placeholder=\"Enter country\"\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label />\r\n              <button className=\"primary\" type=\"submit\">\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
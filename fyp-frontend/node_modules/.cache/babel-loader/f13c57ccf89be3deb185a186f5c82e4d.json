{"ast":null,"code":"import _slicedToArray from\"C:/Users/Lucifer/The Cakesmith/fyp-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{savePaymentMethod}from'../actions/cartActions';import CheckoutSteps from'../components/CheckoutSteps';import Footer from'../Pages/Footer';import Header from'../Pages/Header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PaymentMethodScreen(props){var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress.address){props.history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));props.history.push('/placeorder');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"orderListMain paymentMethodMain\",children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"paypal\",value:\"PayPal\",name:\"paymentMethod\",required:true,checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"paypal\",children:\"PayPal\"})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"stripe\",value:\"Stripe\",name:\"paymentMethod\",required:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"stripe\",children:\"Cash On Delivery\"})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Continue\"})]})]})]}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"sources":["C:/Users/Lucifer/The Cakesmith/fyp-frontend/src/components/PaymentMethodScreen.js"],"names":["React","useState","useDispatch","useSelector","savePaymentMethod","CheckoutSteps","Footer","Header","PaymentMethodScreen","props","cart","state","shippingAddress","address","history","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,iBAAT,KAAkC,wBAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,wFAEA,cAAe,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACjD,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CACA,GAAI,CAACA,eAAe,CAACC,OAArB,CAA8B,CAC5BJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,WAAnB,EACD,CACD,cAA0Cd,QAAQ,CAAC,QAAD,CAAlD,wCAAOe,aAAP,eAAsBC,gBAAtB,eACA,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACd,iBAAiB,CAACY,aAAD,CAAlB,CAAR,CACAP,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,aAAnB,EACD,CAJD,CAKA,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,aAAK,SAAS,CAAC,iCAAf,wBACA,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADA,cAEA,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAEI,aAAjC,wBACE,kCACE,sCADF,EADF,cAIE,kCACE,oCACE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,QAFL,CAGE,KAAK,CAAC,QAHR,CAIE,IAAI,CAAC,eAJP,CAKE,QAAQ,KALV,CAME,OAAO,KANT,CAOE,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAPZ,EADF,cAUE,cAAO,OAAO,CAAC,QAAf,oBAVF,GADF,EAJF,cAkBE,kCACE,oCACE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,QAFL,CAGE,KAAK,CAAC,QAHR,CAIE,IAAI,CAAC,eAJP,CAKE,QAAQ,KALV,CAME,QAAQ,CAAE,kBAACH,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANZ,EADF,cASE,cAAO,OAAO,CAAC,QAAf,8BATF,GADF,EAlBF,cA+BE,oCACE,gBADF,cAEE,eAAQ,SAAS,CAAC,SAAlB,CAA4B,IAAI,CAAC,QAAjC,sBAFF,GA/BF,GAFA,GAFF,cA2CE,KAAC,MAAD,IA3CF,GADF,CA+CD","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport Footer from '../Pages/Footer';\r\nimport Header from '../Pages/Header';\r\n\r\nexport default function PaymentMethodScreen(props) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  if (!shippingAddress.address) {\r\n    props.history.push('/shipping');\r\n  }\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    props.history.push('/placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <div className=\"orderListMain paymentMethodMain\">\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Payment Method</h1>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"paypal\"\r\n              value=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              required\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></input>\r\n            <label htmlFor=\"paypal\">PayPal</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"stripe\"\r\n              value=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              required\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></input>\r\n            <label htmlFor=\"stripe\">Cash On Delivery</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/Lucifer/The Cakesmith/fyp-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{detailsUser,updateUserProfile}from'../actions/userActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{USER_UPDATE_PROFILE_RESET}from'../constants/userConstants';import Footer from'../Pages/Footer';import Header from'../Pages/Header';import'./ProfileScreen.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProfileScreen(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var successUpdate=userUpdateProfile.success,errorUpdate=userUpdateProfile.error,loadingUpdate=userUpdateProfile.loading;var dispatch=useDispatch();useEffect(function(){if(!user){dispatch({type:USER_UPDATE_PROFILE_RESET});dispatch(detailsUser(userInfo._id));}else{setName(user.name);setEmail(user.email);}},[dispatch,userInfo._id,user]);var submitHandler=function submitHandler(e){e.preventDefault();// dispatch update profile\nif(password!==confirmPassword){alert('Password and Confirm Password Are Not Matched');}else{dispatch(updateUserProfile({userId:user._id,name:name,email:email,password:password}));}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"ProfileViewBody\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-image-Login\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ProfileViewwrap\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ProfileViewForm\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"User Profile\"}),loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[loadingUpdate&&/*#__PURE__*/_jsx(LoadingBox,{}),errorUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorUpdate}),successUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"success\",children:\"Profile Updated Successfully\"}),/*#__PURE__*/_jsx(\"p\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"name\",type:\"text\",placeholder:\"Enter name\",pattern:\"[a-zA-Z]+\",title:\"Name can't contain letters\",maxLength:\"14\",minLength:\"6\",value:name,onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",placeholder:\"Enter email\",maxLength:\"30\",pattern:\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",title:\"Incorrect email format\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",placeholder:\"Enter password\",pattern:\".{8,}\",title:\"Eight or more characters required\",onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{htmlFor:\"confirmPassword\",children:\"confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"confirmPassword\",type:\"password\",placeholder:\"Re-enter password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Update\"})]})]})})})]}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"sources":["C:/Users/Lucifer/The Cakesmith/fyp-frontend/src/components/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","Footer","Header","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","successUpdate","success","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport Footer from '../Pages/Footer';\r\nimport Header from '../Pages/Header';\r\nimport './ProfileScreen.css';\r\n\r\n\r\nexport default function ProfileScreen() {\r\n    const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n  } = userUpdateProfile;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!user) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(detailsUser(userInfo._id));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }, [dispatch, userInfo._id, user]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update profile\r\n    if (password !== confirmPassword) {\r\n        alert('Password and Confirm Password Are Not Matched');\r\n      } else {\r\n        dispatch(updateUserProfile({ userId: user._id, name, email, password }));\r\n      }\r\n  };\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        \r\n        <div className=\"ProfileViewBody\">\r\n        <div className=\"bg-image-Login\"></div>\r\n          <div className=\"ProfileViewwrap\">\r\n\r\n          <div className=\"ProfileViewForm\">\r\n          <form className=\"form\" onSubmit={submitHandler}>\r\n            \r\n              <h1>User Profile</h1>\r\n            \r\n            {loading ? (\r\n              <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n              <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n              <>\r\n              {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && (\r\n                  <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n                )}\r\n                {successUpdate && (\r\n                  <MessageBox variant=\"success\">\r\n                    Profile Updated Successfully\r\n                  </MessageBox>\r\n                )}\r\n                \r\n                  <p htmlFor=\"name\">Name</p>\r\n                  <input id=\"name\" type=\"text\" placeholder=\"Enter name\" pattern=\"[a-zA-Z]+\" title=\"Name can't contain letters\" maxLength=\"14\" minLength=\"6\"  value={name} onChange={(e) => setName(e.target.value)}></input>\r\n                \r\n                \r\n                  <p htmlFor=\"email\">Email</p>\r\n                  <input id=\"email\" type=\"email\" placeholder=\"Enter email\"  maxLength=\"30\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Incorrect email format\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n            \r\n                \r\n                  <p htmlFor=\"password\">Password</p>\r\n                  <input id=\"password\" type=\"password\" placeholder=\"Enter password\" pattern=\".{8,}\" title=\"Eight or more characters required\" onChange={(e) => setPassword(e.target.value)}></input>\r\n                \r\n                \r\n                  <p htmlFor=\"confirmPassword\">confirm Password</p>\r\n                  <input id=\"confirmPassword\" type=\"password\" placeholder=\"Re-enter password\" onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n               \r\n                \r\n                  <button className=\"primary\" type=\"submit\">\r\n                    Update\r\n                  </button>\r\n                \r\n              </>\r\n            )}\r\n          </form>\r\n      </div>\r\n\r\n\r\n      </div>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
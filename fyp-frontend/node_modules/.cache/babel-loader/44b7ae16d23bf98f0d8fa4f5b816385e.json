{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucifer\\\\The Cakesmith\\\\fyp-frontend\\\\src\\\\components\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport Footer from '../Pages/Footer';\nimport Header from '../Pages/Header';\nimport './ProfileScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password Are Not Matched');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileViewBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-image-Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProfileViewwrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileViewForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"User Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"danger\",\n                children: errorUpdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"success\",\n                children: \"Profile Updated Successfully\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"name\",\n                type: \"text\",\n                placeholder: \"Enter name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"email\",\n                type: \"email\",\n                placeholder: \"Enter email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"password\",\n                type: \"password\",\n                placeholder: \"Enter password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Enter confirm password\",\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"primary\",\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"ig/X2LYQ+R2EikOWNX9FWqlV6CY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Lucifer/The Cakesmith/fyp-frontend/src/components/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","Footer","Header","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport Footer from '../Pages/Footer';\r\nimport Header from '../Pages/Header';\r\nimport './ProfileScreen.css';\r\n\r\n\r\nexport default function ProfileScreen() {\r\n    const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n  } = userUpdateProfile;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!user) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(detailsUser(userInfo._id));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }, [dispatch, userInfo._id, user]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update profile\r\n    if (password !== confirmPassword) {\r\n        alert('Password and Confirm Password Are Not Matched');\r\n      } else {\r\n        dispatch(updateUserProfile({ userId: user._id, name, email, password }));\r\n      }\r\n  };\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        \r\n        <div className=\"ProfileViewBody\">\r\n        <div className=\"bg-image-Login\"></div>\r\n          <div className=\"ProfileViewwrap\">\r\n\r\n          <div className=\"ProfileViewForm\">\r\n          <form className=\"form\" onSubmit={submitHandler}>\r\n            \r\n              <h1>User Profile</h1>\r\n            \r\n            {loading ? (\r\n              <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n              <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n              <>\r\n              {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && (\r\n                  <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n                )}\r\n                {successUpdate && (\r\n                  <MessageBox variant=\"success\">\r\n                    Profile Updated Successfully\r\n                  </MessageBox>\r\n                )}\r\n                \r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input id=\"name\" type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e) => setName(e.target.value)}></input>\r\n                \r\n                \r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input id=\"email\" type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n            \r\n                \r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input id=\"password\" type=\"password\" placeholder=\"Enter password\" onChange={(e) => setPassword(e.target.value)}></input>\r\n                \r\n                \r\n                  <label htmlFor=\"confirmPassword\">confirm Password</label>\r\n                  <input id=\"confirmPassword\" type=\"password\" placeholder=\"Enter confirm password\" onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n               \r\n                <div>\r\n                  <label />\r\n                  <button className=\"primary\" type=\"submit\">\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </form>\r\n      </div>\r\n\r\n\r\n      </div>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}